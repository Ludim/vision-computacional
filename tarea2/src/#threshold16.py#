#!/usr/bin/python
#-*- coding: utf-8 -*-
__author__ = 'José Epifanio'
from Tkinter import *
from tkFileDialog import askopenfilename
import tkMessageBox
from PIL import Image
class threshold16:

    def __init__(self,image):
        self.imag=image
        self.width=image.size[0]
        self.height=image.size[1]
        self.newImag = Image.new(self.imag.mode,self.imag.size)

    def threshold(self):
        ran = 255/16
        for x in range(self.width):
            for y in range(self.height):
                gray = self.imag.getpixel((x,y))
                if gray>=0 or ran<=gray:
                    if (ran/2)>gray:
                        gray=0
                    else:
                        gray=ran
                elif (ran*2)>=gray or (ran*3)<=gray:
                    if ((ran*2)/2)>=gray:
                        gray= (ran*2)
                    else:
                        gray= (ran*3)
                elif (ran*3)>=gray or (ran*4)<=gray:
                    if ((ran*3)/2)>=gray:
                        gray= (ran*3)
                    else:
                        gray= (ran*4)
                elif (ran*4)>=gray or (ran*5)<=gray:
                    if ((ran*4)/2)>=gray:
                        gray= (ran*4)
                    else:
                        gray= (ran*5)
                elif (ran*5)>=gray or (ran*6)<=gray:
                    if ((ran*5)/2)>=gray:
                        gray= (ran*5)
                    else:
                        gray= (ran*6)
                elif (ran*6)>=gray or (ran*7)<=gray:
                    if ((ran*6)/2)>=gray:
                        gray= (ran*6)
                    else:
                        gray= (ran*7)
                elif (ran*7)>=gray or (ran*8)<=gray:
                    if ((ran*7)/2)>=gray:
                        gray= (ran*7)
                    else:
                        gray= (ran*8)
                elif (ran*8)>=gray or (ran*9)<=gray:
                    if ((ran*8)/2)>=gray:
                        gray= (ran*8)
                    else:
                        gray= (ran*9)
                elif (ran*9)>=gray or (ran*10)<=gray:
                    if ((ran*9)/2)>=gray:
                        gray= (ran*9)
                    else:
                        gray= (ran*10)
                elif (ran*10)>=gray or (ran*11)<=gray:
                    if ((ran*10)/2)>=gray:
                        gray= (ran*10)
                    else:
                        gray= (ran*11)
                elif (ran*11)>=gray or (ran*12)<=gray:
                    if ((ran*11)/2)>=gray:
                        gray= (ran*11)
                    else:
                        gray= (ran*12)
                elif (ran*12)>=gray or (ran*13)<=gray:
                    if ((ran*12)/2)>=gray:
                        gray= (ran*12)
                    else:
                        gray= (ran*13)
                elif (ran*13)>=gray or (ran*14)<=gray:
                    if ((ran*13)/2)>=gray:
                        gray= (ran*13)
                    else:
                        gray= (ran*14)
                elif (ran*14)>=gray or (ran*15)<=gray:
                    if ((ran*14)/2)>=gray:
                        gray= (ran*14)
                    else:
                        gray= (ran*15)
                elif (ran*15)>=gray or (ran*16)<=gray:
                    if ((ran*15)/2)>=gray:
                        gray= (ran*15)
                    else:
                        gray= (ran*16)
                elif (ran*16)>=gray or (ran*17)<=gray:
                    if ((ran*16)/2)>=gray:
                        gray= (ran*16)
                    else:
                        gray= (ran*17)
                self.newImag.putpixel((x,y),(gray,gray,gray))
        self.newImag.save("../img/florthreshold",self.imag.format)
        #self.newImage.show()
        print "Done.."




def main():
    Tk().withdraw()
    tkMessageBox.showinfo( "Image", "Select an Image")
    usrImag = askopenfilename()
    thres = threshold16(Image.open(str(usrImag)))
    thres.threshold()


if __name__=='__main__':
    main()
